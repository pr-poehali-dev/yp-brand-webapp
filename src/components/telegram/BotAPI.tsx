interface BotMessage {
  chat_id: number;
  text: string;
  reply_markup?: {
    inline_keyboard: Array<Array<{
      text: string;
      callback_data?: string;
      url?: string;
      web_app?: { url: string };
    }>>;
  };
  parse_mode?: 'HTML' | 'Markdown';
}

export class BotAPI {
  private botToken: string;
  private apiBase: string;

  constructor(botToken: string) {
    this.botToken = botToken;
    this.apiBase = `https://api.telegram.org/bot${botToken}`;
  }

  async getBotInfo() {
    try {
      const response = await fetch(`${this.apiBase}/getMe`);
      const data = await response.json();
      return data;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:', error);
      throw error;
    }
  }

  async setupBotCommands() {
    const commands = [
      { command: 'start', description: 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω' },
      { command: 'catalog', description: 'üì¶ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤' },
      { command: 'admin', description: '‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' },
      { command: 'orders', description: 'üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã' },
      { command: 'support', description: 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞' }
    ];

    try {
      await fetch(`${this.apiBase}/setMyCommands`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ commands })
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥:', error);
      throw error;
    }
  }

  async getUpdates(offset: number = 0) {
    try {
      const response = await fetch(`${this.apiBase}/getUpdates?offset=${offset}&timeout=30`);
      const data = await response.json();
      return data;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞:', error);
      throw error;
    }
  }

  async sendMessage(message: BotMessage) {
    try {
      const response = await fetch(`${this.apiBase}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(message)
      });
      
      const data = await response.json();
      if (!data.ok) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', data);
      }
      return data;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      throw error;
    }
  }

  async answerCallbackQuery(callbackQueryId: string, text: string = '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...') {
    try {
      await fetch(`${this.apiBase}/answerCallbackQuery`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          callback_query_id: callbackQueryId,
          text: text,
          show_alert: false
        })
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback query:', error);
      throw error;
    }
  }

  // –ì–æ—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  createWelcomeMessage(chatId: number, userName: string): BotMessage {
    return {
      chat_id: chatId,
      text: `üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>YP BRAND</b>, ${userName}!

–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ —Ç–µ—Ö–Ω–∏–∫–∞ –ø–æ –ª—É—á—à–∏–º —Ü–µ–Ω–∞–º.

üéÅ <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</b>
‚Ä¢ –†–æ–∑—ã–≥—Ä—ã—à iPhone 15 Pro –¥–æ 30 –∏—é–ª—è
‚Ä¢ –ö—ç—à–±—ç–∫ YP-–º–æ–Ω–µ—Ç–∞–º–∏ 1.2% —Å –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 3000‚ÇΩ

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', web_app: { url: window.location.origin } },
          ],
          [
            { text: 'üì¶ –ö–∞—Ç–∞–ª–æ–≥', callback_data: 'open_store' },
            { text: 'üéÅ –†–æ–∑—ã–≥—Ä—ã—à', callback_data: 'giveaway_info' }
          ],
          [
            { text: 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url: 'https://t.me/ypbrand_support' }
          ]
        ]
      }
    };
  }

  createAdminMessage(chatId: number): BotMessage {
    return {
      chat_id: chatId,
      text: `üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å YP BRAND</b>

–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º –º–∞–≥–∞–∑–∏–Ω–æ–º –ø—Ä—è–º–æ –∏–∑ Telegram!

üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∏ –∞–∫—Ü–∏–π
‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞

–û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:`,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚öôÔ∏è –û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', web_app: { url: `${window.location.origin}?admin=true` } }
          ],
          [
            { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'admin_stats' },
            { text: 'üì¶ –¢–æ–≤–∞—Ä—ã', callback_data: 'admin_products' }
          ],
          [
            { text: 'üõí –ó–∞–∫–∞–∑—ã', callback_data: 'admin_orders' },
            { text: 'üéÅ –†–æ–∑—ã–≥—Ä—ã—à–∏', callback_data: 'admin_giveaways' }
          ]
        ]
      }
    };
  }

  createCatalogMessage(chatId: number): BotMessage {
    return {
      chat_id: chatId,
      text: `üì¶ <b>–ö–∞—Ç–∞–ª–æ–≥ YP BRAND</b>

üî• <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>

üéß <b>–ê—É–¥–∏–æ –∏ –∑–≤—É–∫</b>
‚Ä¢ –ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ –æ—Ç 3999‚ÇΩ
‚Ä¢ –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –æ—Ç 2499‚ÇΩ

üîå <b>–ö–∞–±–µ–ª–∏ –∏ –∑–∞—Ä—è–¥–∫–∏</b>
‚Ä¢ USB-C –∫–∞–±–µ–ª–∏ –ø—Ä–µ–º–∏—É–º –æ—Ç 1299‚ÇΩ
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –∑–∞—Ä—è–¥–∫–∏ 65W –æ—Ç 1899‚ÇΩ

üîã <b>Power Bank</b>
‚Ä¢ 10000mAh –æ—Ç 2499‚ÇΩ
‚Ä¢ –ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è –∑–∞—Ä—è–¥–∫–∞ –æ—Ç 3299‚ÇΩ

–û—Ç–∫—Ä–æ–π—Ç–µ –ø–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:`,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üõç –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', web_app: { url: `${window.location.origin}?tab=catalog` } }
          ],
          [
            { text: 'üéß –ê—É–¥–∏–æ', callback_data: 'category_audio' },
            { text: 'üîå –ö–∞–±–µ–ª–∏', callback_data: 'category_cables' }
          ],
          [
            { text: 'üîã Power Bank', callback_data: 'category_powerbank' },
            { text: 'üì± –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', callback_data: 'category_accessories' }
          ]
        ]
      }
    };
  }

  createOrdersMessage(chatId: number): BotMessage {
    return {
      chat_id: chatId,
      text: `üõí <b>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã</b>

üìã <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:</b>

‚Ä¢ –ó–∞–∫–∞–∑ #1234 - 3299‚ÇΩ (–í –¥–æ—Å—Ç–∞–≤–∫–µ)
‚Ä¢ –ó–∞–∫–∞–∑ #1223 - 1899‚ÇΩ (–í—ã–ø–æ–ª–Ω–µ–Ω)

üí∞ <b>YP-–º–æ–Ω–µ—Ç—ã:</b> 156 ‚ÇΩ
üéØ <b>–ö—ç—à–±—ç–∫:</b> 1.2% —Å –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏

–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:`,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –∑–∞–∫–∞–∑—ã', web_app: { url: `${window.location.origin}?tab=profile` } }
          ],
          [
            { text: 'üõí –í –∫–æ—Ä–∑–∏–Ω—É', web_app: { url: `${window.location.origin}?tab=cart` } },
            { text: '‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', web_app: { url: `${window.location.origin}?tab=favorites` } }
          ]
        ]
      }
    };
  }

  createSupportMessage(chatId: number): BotMessage {
    return {
      chat_id: chatId,
      text: `üí¨ <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ YP BRAND</b>

–ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!

üïê <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> 9:00 - 21:00 (–ú–°–ö)
üìû <b>–û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ:</b> 5-15 –º–∏–Ω—É—Ç

‚ùì <b>–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>
‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ 1-3 –¥–Ω—è –ø–æ –†–æ—Å—Å–∏–∏
‚Ä¢ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π, –Ω–∞–ª–∏—á–Ω—ã–º–∏, YP-–º–æ–Ω–µ—Ç–∞–º–∏
‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π

–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:`,
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', url: 'https://t.me/ypbrand_support' }
          ],
          [
            { text: 'üìû –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫', callback_data: 'request_call' },
            { text: '‚ùì FAQ', callback_data: 'show_faq' }
          ]
        ]
      }
    };
  }

  createUnknownCommandMessage(chatId: number): BotMessage {
    return {
      chat_id: chatId,
      text: `ü§ñ –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/catalog - –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤  
/orders - –ú–æ–∏ –∑–∞–∫–∞–∑—ã
/support - –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω:`,
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', web_app: { url: window.location.origin } }
          ]
        ]
      }
    };
  }

  createCartAddedMessage(chatId: number): BotMessage {
    return {
      chat_id: chatId,
      text: `‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!

–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:`,
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', web_app: { url: `${window.location.origin}?tab=cart` } }
          ]
        ]
      }
    };
  }

  createWebAppMessage(chatId: number, type: 'admin' | 'store'): BotMessage {
    const isAdmin = type === 'admin';
    return {
      chat_id: chatId,
      text: isAdmin ? '–û—Ç–∫—Ä—ã–≤–∞—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...' : '–û—Ç–∫—Ä—ã–≤–∞—é –º–∞–≥–∞–∑–∏–Ω...',
      reply_markup: {
        inline_keyboard: [
          [
            { 
              text: isAdmin ? '‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' : 'üõç –ú–∞–≥–∞–∑–∏–Ω', 
              web_app: { url: isAdmin ? `${window.location.origin}?admin=true` : window.location.origin } 
            }
          ]
        ]
      }
    };
  }
}

export type { BotMessage };